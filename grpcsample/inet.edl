enclave {
    include "arpa/inet.h"
    include "inet_types.h"

    trusted {
    };

    untrusted {
        oe_htonl_result_t oe_host_ocall_htonl(uint32_t a);

        oe_htons_result_t oe_host_ocall_htons(uint16_t a);

        oe_ntohl_result_t oe_host_ocall_ntohl(uint32_t a);

        oe_ntohs_result_t oe_host_ocall_ntohs(uint16_t a);

        oe_inet_addr_result_t oe_host_ocall_inet_addr([in, string] const char * a);

        oe_inet_network_result_t oe_host_ocall_inet_network([in, string] const char * a);

        oe_inet_ntoa_result_t oe_host_ocall_inet_ntoa(struct in_addr a);

        oe_inet_pton_result_t oe_host_ocall_inet_pton(int a, [in, string] const char * b, [in, out, size=d] void * c, int d);

        oe_inet_ntop_result_t oe_host_ocall_inet_ntop(int a, [in, size=e] const void * b, int e,  [in, out] char * c, socklen_t d);


        oe_inet_aton_result_t oe_host_ocall_inet_aton([in, string] const char * a, [in, out] struct in_addr * b);

        oe_inet_makeaddr_result_t oe_host_ocall_inet_makeaddr(in_addr_t a, in_addr_t b);

        oe_inet_lnaof_result_t oe_host_ocall_inet_lnaof(struct in_addr a);

        oe_inet_netof_result_t oe_host_ocall_inet_netof(struct in_addr a);

    };
};
